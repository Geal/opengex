/* OpenDDL meta syntax
This is piston-meta syntax for OpenDDL format.
See www.openddl.org
*/
// Separator characters.
_seps: "{}=[]%$,/\""
// Whitespace can contain single and multiple line comments.
1 w = .r!({
    ["//" ..."\n"?]
    ["/*" ..."*"? .r?([!"*/" "*" ..."*"?]) "*/"]
    .w!
})
// Whitespace is allowed when "," is used as separator.
2 , = [?w "," ?w]
3 name = [{"$" "%"} .._seps!]
4 reference = {
    [name ?w .r?(["%" identifier])]
    "null"
}
4 bool-literal = {"false" "true"}
// Replaces both integer and float literals.
5 number-literal = .$_
6 string-literal = .t?
7 data-list = {
    .s!(, bool-literal)
    .s!(, number-literal)
    .s!(, string-literal)
    .s!(, reference)
    .s!(, data-type)
}
8 data-array-list = {
    .s!(, ["{" ?w .s!(, bool-literal) ?w "}"])
    .s!(, ["{" ?w .s!(, number-literal) ?w "}"])
    .s!(, ["{" ?w .s!(, string-literal) ?w "}"])
    .s!(, ["{" ?w .s!(, reference) ?w "}"])
    .s!(, ["{" ?w .s!(, data-type) ?w "}"])
}
9 data-type = {
    "bool"
    "int8"
    "int16"
    "int32"
    "int64"
    "unsigned_int8"
    "unsigned_int16"
    "unsigned_int32"
    "unsigned_int64"
    "half"
    "float"
    "double"
    "string"
    "ref"
    "type"
}
10 property = [.._seps! ?w "=" ?w {
    bool-literal
    number-literal
    string-literal
    reference
    data-type
}]
11 structure = {
    [data-type ?w {
            [?name ?w "{" ?w ?data-list ?w "}"]
            ["[" ?w number-literal ?w "]" ?w ?name ?w "{" ?w ?data-array-list ?w "}"]
        }
    ]
    [.._seps! ?w ?name ?w
        ?["(" ?w .s!(, property) ?w ")"]
        ?w "{" .r?([?w structure]) ?w "}"
    ]
}
12 file = [.r?([?w structure]) ?w]
